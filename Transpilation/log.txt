FOUND : IfExpression : 
	{'conditionExpression': 'LogicalExpression', 'thenExpression': 'LogicalExpression', 'elseExpression': 'LogicalExpression'}

	***thenExpression : 
	FOUND : LogicalExpression : 
		{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

		***leftRelationalExpression : 
		FOUND : RelationalExpression : 
			{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

			***leftAdditiveExpression : 
			FOUND : additiveExpression : 
				{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

				***leftMultiplicativeExpression : 
				FOUND : multiplicativeExpression : 
					{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

					***leftUnaryExpression : 
					FOUND : UnaryExpression : 
						{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

						***postfixExpression : 
						FOUND : PostfixExpression : 
							{'primaryExpression': 'PropertyCall', 'propertyCall': []}

							***primaryExpression : 
							FOUND : PropertyCall : 
								{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

								***pathName : 
								FOUND : PathName : 
									{'names': ['something']}

	***conditionExpression : 
	FOUND : LogicalExpression : 
		{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

		***leftRelationalExpression : 
		FOUND : RelationalExpression : 
			{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

			***leftAdditiveExpression : 
			FOUND : additiveExpression : 
				{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

				***leftMultiplicativeExpression : 
				FOUND : multiplicativeExpression : 
					{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

					***leftUnaryExpression : 
					FOUND : UnaryExpression : 
						{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

						***postfixExpression : 
						FOUND : PostfixExpression : 
							{'primaryExpression': 'PropertyCall', 'propertyCall': []}

							***primaryExpression : 
							FOUND : PropertyCall : 
								{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

								***pathName : 
								FOUND : PathName : 
									{'names': ['condition']}

	***elseExpression : 
	FOUND : LogicalExpression : 
		{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

		***leftRelationalExpression : 
		FOUND : RelationalExpression : 
			{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

			***leftAdditiveExpression : 
			FOUND : additiveExpression : 
				{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

				***leftMultiplicativeExpression : 
				FOUND : multiplicativeExpression : 
					{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

					***leftUnaryExpression : 
					FOUND : UnaryExpression : 
						{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

						***postfixExpression : 
						FOUND : PostfixExpression : 
							{'primaryExpression': 'PropertyCall', 'propertyCall': []}

							***primaryExpression : 
							FOUND : PropertyCall : 
								{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

								***pathName : 
								FOUND : PathName : 
									{'names': ['somethingElse']}

FOUND : LetExpression : 
	{'identifier': 'something', 'extra_identifiers': 'FormalParameterList', 'type': 'TypeSpecifier', 'initExpression': 'LogicalExpression', 'subExpression': 'LogicalExpression'}

	***initExpression : 
	FOUND : LogicalExpression : 
		{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

		***leftRelationalExpression : 
		FOUND : RelationalExpression : 
			{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

			***leftAdditiveExpression : 
			FOUND : additiveExpression : 
				{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

				***leftMultiplicativeExpression : 
				FOUND : multiplicativeExpression : 
					{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

					***leftUnaryExpression : 
					FOUND : UnaryExpression : 
						{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

						***postfixExpression : 
						FOUND : PostfixExpression : 
							{'primaryExpression': 'PropertyCall', 'propertyCall': []}

							***primaryExpression : 
							FOUND : PropertyCall : 
								{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

								***pathName : 
								FOUND : PathName : 
									{'names': ['someValue']}

	***subExpression : 
	FOUND : LogicalExpression : 
		{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

		***leftRelationalExpression : 
		FOUND : RelationalExpression : 
			{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

			***leftAdditiveExpression : 
			FOUND : additiveExpression : 
				{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

				***leftMultiplicativeExpression : 
				FOUND : multiplicativeExpression : 
					{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

					***leftUnaryExpression : 
					FOUND : UnaryExpression : 
						{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

						***postfixExpression : 
						FOUND : PostfixExpression : 
							{'primaryExpression': 'PropertyCall', 'propertyCall': []}

							***primaryExpression : 
							FOUND : PropertyCall : 
								{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

								***pathName : 
								FOUND : PathName : 
									{'names': ['nestedExpression']}

FOUND : LogicalExpression : 
	{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': ['and'], 'rightRelationalExpression': [<textx:oclGrammar.RelationalExpression instance at 0x2467350>]}

	***leftRelationalExpression : 
	FOUND : RelationalExpression : 
		{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': '=', 'rightAdditiveExpression': 'AdditiveExpression'}

		***leftAdditiveExpression : 
		FOUND : additiveExpression : 
			{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': ['+'], 'rightMultiplicativeExpression': [<textx:oclGrammar.MultiplicativeExpression instance at 0x24519d0>]}

			***leftMultiplicativeExpression : 
			FOUND : multiplicativeExpression : 
				{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': ['*'], 'rightUnaryExpression': [<textx:oclGrammar.UnaryExpression instance at 0x2467370>]}

				***leftUnaryExpression : 
				FOUND : UnaryExpression : 
					{'unaryOperator': 'not', 'postfixExpression': 'PostfixExpression'}

					***postfixExpression : 
					FOUND : PostfixExpression : 
						{'primaryExpression': 'PropertyCall', 'propertyCall': [<textx:oclGrammar.PropertyCall instance at 0x24679d0>]}

						***primaryExpression : 
						FOUND : PropertyCall : 
							{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

							***pathName : 
							FOUND : PathName : 
								{'names': ['name0']}

				***rightUnaryExpression : 
				FOUND : UnaryExpression : 
					{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

					***postfixExpression : 
					FOUND : PostfixExpression : 
						{'primaryExpression': 'PropertyCall', 'propertyCall': []}

						***primaryExpression : 
						FOUND : PropertyCall : 
							{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

							***pathName : 
							FOUND : PathName : 
								{'names': ['multiple']}

			***rightMultiplicativeExpression : 
			FOUND : multiplicativeExpression : 
				{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

				***leftUnaryExpression : 
				FOUND : UnaryExpression : 
					{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

					***postfixExpression : 
					FOUND : PostfixExpression : 
						{'primaryExpression': 'PropertyCall', 'propertyCall': []}

						***primaryExpression : 
						FOUND : PropertyCall : 
							{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

							***pathName : 
							FOUND : PathName : 
								{'names': ['sum']}

		***rightAdditiveExpression : 
		FOUND : additiveExpression : 
			{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

			***leftMultiplicativeExpression : 
			FOUND : multiplicativeExpression : 
				{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

				***leftUnaryExpression : 
				FOUND : UnaryExpression : 
					{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

					***postfixExpression : 
					FOUND : PostfixExpression : 
						{'primaryExpression': 'PropertyCall', 'propertyCall': []}

						***primaryExpression : 
						FOUND : PropertyCall : 
							{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'Qualifiers', 'propertyCallParameters': 'NoneType'}

							***pathName : 
							FOUND : PathName : 
								{'names': ['aValue']}

							***qualifiers : 
							FOUND : Qualifiers : 
								{'actualParameterList': 'ActualParameterList'}

								***actualParameterList : 
								FOUND : ActualParameterList : 
									{'expressions': [<textx:oclGrammar.LogicalExpression instance at 0x24904d0>, <textx:oclGrammar.LogicalExpression instance at 0x2490510>]}

									FOUND : LogicalExpression : 
										{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

										***leftRelationalExpression : 
										FOUND : RelationalExpression : 
											{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

											***leftAdditiveExpression : 
											FOUND : additiveExpression : 
												{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

												***leftMultiplicativeExpression : 
												FOUND : multiplicativeExpression : 
													{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

													***leftUnaryExpression : 
													FOUND : UnaryExpression : 
														{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

														***postfixExpression : 
														FOUND : PostfixExpression : 
															{'primaryExpression': 'PropertyCall', 'propertyCall': []}

															***primaryExpression : 
															FOUND : PropertyCall : 
																{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

																***pathName : 
																FOUND : PathName : 
																	{'names': ['aqualifier']}

									FOUND : LogicalExpression : 
										{'leftRelationalExpression': 'RelationalExpression', 'logicalOperator': [], 'rightRelationalExpression': []}

										***leftRelationalExpression : 
										FOUND : RelationalExpression : 
											{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

											***leftAdditiveExpression : 
											FOUND : additiveExpression : 
												{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

												***leftMultiplicativeExpression : 
												FOUND : multiplicativeExpression : 
													{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

													***leftUnaryExpression : 
													FOUND : UnaryExpression : 
														{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

														***postfixExpression : 
														FOUND : PostfixExpression : 
															{'primaryExpression': 'PropertyCall', 'propertyCall': []}

															***primaryExpression : 
															FOUND : PropertyCall : 
																{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

																***pathName : 
																FOUND : PathName : 
																	{'names': ['anotherQualifier']}

	***rightRelationalExpression : 
	FOUND : RelationalExpression : 
		{'leftAdditiveExpression': 'AdditiveExpression', 'relationalOperator': 'NoneType', 'rightAdditiveExpression': 'NoneType'}

		***leftAdditiveExpression : 
		FOUND : additiveExpression : 
			{'leftMultiplicativeExpression': 'MultiplicativeExpression', 'additiveOperator': [], 'rightMultiplicativeExpression': []}

			***leftMultiplicativeExpression : 
			FOUND : multiplicativeExpression : 
				{'leftUnaryExpression': 'UnaryExpression', 'multiplyOperator': [], 'rightUnaryExpression': []}

				***leftUnaryExpression : 
				FOUND : UnaryExpression : 
					{'unaryOperator': 'NoneType', 'postfixExpression': 'PostfixExpression'}

					***postfixExpression : 
					FOUND : PostfixExpression : 
						{'primaryExpression': 'PropertyCall', 'propertyCall': []}

						***primaryExpression : 
						FOUND : PropertyCall : 
							{'pathName': 'PathName', 'timeExpression': 'NoneType', 'qualifiers': 'NoneType', 'propertyCallParameters': 'NoneType'}

							***pathName : 
							FOUND : PathName : 
								{'names': ['aBoolean']}

