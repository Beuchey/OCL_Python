let something (one : onType, two : twoType) : someType = someValue in
  if condition then print(something) else print(somethingElse) endif


not name0.base::leaf @ pre [qualifier1, qualifier2] (name0, name1 : typeBase::typeLeaf ; extraName : some = something | aParameter, anotherParameter)
*
multiple
+
summable


aValue[aqualifier, anotherQualifier]
and
(aBoolean or anotherOne)


Set{1..two, len("three")..enum::literal}


path::name


Set{1}
