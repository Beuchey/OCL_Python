*** PARSING MODEL ***
>> Matching rule Model=Sequence at position 0 => *let someth
   >> Matching rule File=ZeroOrMore in Model at position 0 => *let someth
      >> Matching rule __asgn_plain=Sequence[expressions] in File at position 0 => *let someth
         >> Matching rule Expression=OrderedChoice in __asgn_plain at position 0 => *let someth
            >> Matching rule __asgn_plain=Sequence[ifExpression] in Expression at position 0 => *let someth
               >> Matching rule IfExpression=Sequence in __asgn_plain at position 0 => *let someth
                  ?? Try match rule StrMatch(if) in IfExpression at position 0 => *let someth
                  -- No match 'if' at 0 => '*le*t someth'
               <<- Not matched rule IfExpression=Sequence in IfExpression at position 0 => *let someth
            <<- Not matched rule __asgn_plain=Sequence[ifExpression] in __asgn_plain at position 0 => *let someth
            >> Matching rule __asgn_plain=Sequence[letExpression] in Expression at position 0 => *let someth
               >> Matching rule LetExpression=Sequence in __asgn_plain at position 0 => *let someth
                  ?? Try match rule StrMatch(let) in LetExpression at position 0 => *let someth
                  ++ Match 'let' at 0 => '*let* someth'
                  >> Matching rule __asgn_plain=Sequence[identifier] in LetExpression at position 3 => let* something
                     ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 4 => let *something 
                     ++ Match 'something' at 4 => 'let *something* '
                  <<+ Matched rule __asgn_plain=Sequence[identifier] in __asgn_plain at position 13 =>  something* : Set(Int
                  >> Matching rule Optional in LetExpression at position 13 =>  something* : Set(Int
                     >> Matching rule Sequence in LetExpression at position 13 =>  something* : Set(Int
                        ?? Try match rule StrMatch(() in LetExpression at position 14 => something *: Set(Inte
                        -- No match '(' at 14 => 'something *:* Set(Inte'
                     <<- Not matched rule Sequence in LetExpression at position 13 =>  something* : Set(Int
                  <<- Not matched rule Optional in LetExpression at position 13 =>  something* : Set(Int
                  >> Matching rule Optional in LetExpression at position 13 =>  something* : Set(Int
                     >> Matching rule Sequence in LetExpression at position 13 =>  something* : Set(Int
                        ?? Try match rule StrMatch(:) in LetExpression at position 14 => something *: Set(Inte
                        ++ Match ':' at 14 => 'something *:* Set(Inte'
                        >> Matching rule __asgn_plain=Sequence[type] in LetExpression at position 15 => omething :* Set(Integ
                           >> Matching rule TypeSpecifier=OrderedChoice in __asgn_plain at position 15 => omething :* Set(Integ
                              >> Matching rule __asgn_plain=Sequence[collectionType] in TypeSpecifier at position 15 => omething :* Set(Integ
                                 >> Matching rule CollectionType=Sequence in __asgn_plain at position 15 => omething :* Set(Integ
                                    >> Matching rule __asgn_plain=Sequence[collectionKind] in CollectionType at position 15 => omething :* Set(Integ
                                       >> Matching rule CollectionKind=OrderedChoice in __asgn_plain at position 15 => omething :* Set(Integ
                                          ?? Try match rule StrMatch(Set) in CollectionKind at position 16 => mething : *Set(Intege
                                          ++ Match 'Set' at 16 => 'mething : *Set*(Intege'
                                       <<+ Matched rule CollectionKind=OrderedChoice in CollectionKind at position 19 => hing : Set*(Integer) 
                                    <<+ Matched rule __asgn_plain=Sequence[collectionKind] in __asgn_plain at position 19 => hing : Set*(Integer) 
                                    ?? Try match rule StrMatch(() in CollectionType at position 19 => hing : Set*(Integer) 
                                    ++ Match '(' at 19 => 'hing : Set*(*Integer) '
                                    >> Matching rule __asgn_plain=Sequence[simpleTypeSpecifier] in CollectionType at position 20 => ing : Set(*Integer) =
                                       >> Matching rule SimpleTypeSpecifier=Sequence in __asgn_plain at position 20 => ing : Set(*Integer) =
                                          >> Matching rule __asgn_plain=Sequence[pathName] in SimpleTypeSpecifier at position 20 => ing : Set(*Integer) =
                                             >> Matching rule PathName=Sequence in __asgn_plain at position 20 => ing : Set(*Integer) =
                                                >> Matching rule __asgn_plain=Sequence[names] in PathName at position 20 => ing : Set(*Integer) =
                                                   ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 20 => ing : Set(*Integer) =
                                                   ++ Match 'Integer' at 20 => 'ing : Set(*Integer*) ='
                                                <<+ Matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 27 => et(Integer*) = someVa
                                                >> Matching rule ZeroOrMore in PathName at position 27 => et(Integer*) = someVa
                                                   >> Matching rule Sequence in PathName at position 27 => et(Integer*) = someVa
                                                      ?? Try match rule StrMatch(::) in PathName at position 27 => et(Integer*) = someVa
                                                      -- No match '::' at 27 => 'et(Integer*) *= someVa'
                                                   <<- Not matched rule Sequence in PathName at position 27 => et(Integer*) = someVa
                                                <<- Not matched rule ZeroOrMore in PathName at position 27 => et(Integer*) = someVa
                                             <<+ Matched rule PathName=Sequence in PathName at position 27 => et(Integer*) = someVa
                                          <<+ Matched rule __asgn_plain=Sequence[pathName] in __asgn_plain at position 27 => et(Integer*) = someVa
                                       <<+ Matched rule SimpleTypeSpecifier=Sequence in SimpleTypeSpecifier at position 27 => et(Integer*) = someVa
                                    <<+ Matched rule __asgn_plain=Sequence[simpleTypeSpecifier] in __asgn_plain at position 27 => et(Integer*) = someVa
                                    ?? Try match rule StrMatch()) in CollectionType at position 27 => et(Integer*) = someVa
                                    ++ Match ')' at 27 => 'et(Integer*)* = someVa'
                                 <<+ Matched rule CollectionType=Sequence in CollectionType at position 28 => t(Integer)* = someVal
                              <<+ Matched rule __asgn_plain=Sequence[collectionType] in __asgn_plain at position 28 => t(Integer)* = someVal
                           <<+ Matched rule TypeSpecifier=OrderedChoice in TypeSpecifier at position 28 => t(Integer)* = someVal
                        <<+ Matched rule __asgn_plain=Sequence[type] in __asgn_plain at position 28 => t(Integer)* = someVal
                     <<+ Matched rule Sequence in LetExpression at position 28 => t(Integer)* = someVal
                  <<+ Matched rule Optional in LetExpression at position 28 => t(Integer)* = someVal
                  ?? Try match rule StrMatch(=) in LetExpression at position 29 => (Integer) *= someValu
                  ++ Match '=' at 29 => '(Integer) *=* someValu'
                  >> Matching rule __asgn_plain=Sequence[initExpression] in LetExpression at position 30 => Integer) =* someValue
                     >> Matching rule Expression=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                        >> Matching rule __asgn_plain=Sequence[ifExpression] in Expression at position 30 => Integer) =* someValue
                           >> Matching rule IfExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                              ?? Try match rule StrMatch(if) in IfExpression at position 31 => nteger) = *someValue 
                              -- No match 'if' at 31 => 'nteger) = *so*meValue '
                           <<- Not matched rule IfExpression=Sequence in IfExpression at position 30 => Integer) =* someValue
                        <<- Not matched rule __asgn_plain=Sequence[ifExpression] in __asgn_plain at position 30 => Integer) =* someValue
                        >> Matching rule __asgn_plain=Sequence[letExpression] in Expression at position 30 => Integer) =* someValue
                           >> Matching rule LetExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                              ?? Try match rule StrMatch(let) in LetExpression at position 31 => nteger) = *someValue 
                              -- No match 'let' at 31 => 'nteger) = *som*eValue '
                           <<- Not matched rule LetExpression=Sequence in LetExpression at position 30 => Integer) =* someValue
                        <<- Not matched rule __asgn_plain=Sequence[letExpression] in __asgn_plain at position 30 => Integer) =* someValue
                        >> Matching rule __asgn_plain=Sequence[logicalExpression] in Expression at position 30 => Integer) =* someValue
                           >> Matching rule LogicalExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                              >> Matching rule __asgn_plain=Sequence[leftRelationalExpression] in LogicalExpression at position 30 => Integer) =* someValue
                                 >> Matching rule RelationalExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                    >> Matching rule __asgn_plain=Sequence[leftAdditiveExpression] in RelationalExpression at position 30 => Integer) =* someValue
                                       >> Matching rule AdditiveExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                          >> Matching rule __asgn_plain=Sequence[leftMultiplicativeExpression] in AdditiveExpression at position 30 => Integer) =* someValue
                                             >> Matching rule MultiplicativeExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                >> Matching rule __asgn_plain=Sequence[leftUnaryExpression] in MultiplicativeExpression at position 30 => Integer) =* someValue
                                                   >> Matching rule UnaryExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                      >> Matching rule Optional in UnaryExpression at position 30 => Integer) =* someValue
                                                         >> Matching rule __asgn_plain=Sequence[unaryOperator] in UnaryExpression at position 30 => Integer) =* someValue
                                                            >> Matching rule UnaryOperator=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                                                               ?? Try match rule StrMatch(-) in UnaryOperator at position 31 => nteger) = *someValue 
                                                               -- No match '-' at 31 => 'nteger) = *s*omeValue '
                                                               ?? Try match rule StrMatch(not) in UnaryOperator at position 31 => nteger) = *someValue 
                                                               -- No match 'not' at 31 => 'nteger) = *som*eValue '
                                                            <<- Not matched rule UnaryOperator=OrderedChoice in UnaryOperator at position 30 => Integer) =* someValue
                                                         <<- Not matched rule __asgn_plain=Sequence[unaryOperator] in __asgn_plain at position 30 => Integer) =* someValue
                                                      <<- Not matched rule Optional in UnaryExpression at position 30 => Integer) =* someValue
                                                      >> Matching rule __asgn_plain=Sequence[postfixExpression] in UnaryExpression at position 30 => Integer) =* someValue
                                                         >> Matching rule PostfixExpression=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                            >> Matching rule __asgn_plain=Sequence[primaryExpression] in PostfixExpression at position 30 => Integer) =* someValue
                                                               >> Matching rule PrimaryExpression=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                                                                  >> Matching rule Sequence in PrimaryExpression at position 30 => Integer) =* someValue
                                                                     ?? Try match rule StrMatch(() in PrimaryExpression at position 31 => nteger) = *someValue 
                                                                     -- No match '(' at 31 => 'nteger) = *s*omeValue '
                                                                  <<- Not matched rule Sequence in PrimaryExpression at position 30 => Integer) =* someValue
                                                                  >> Matching rule __asgn_plain=Sequence[literalCollection] in PrimaryExpression at position 30 => Integer) =* someValue
                                                                     >> Matching rule LiteralCollection=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                                        >> Matching rule __asgn_plain=Sequence[collectionKind] in LiteralCollection at position 30 => Integer) =* someValue
                                                                           >> Matching rule CollectionKind=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                                                                              ?? Try match rule StrMatch(Set) in CollectionKind at position 31 => nteger) = *someValue 
                                                                              -- No match 'Set' at 31 => 'nteger) = *som*eValue '
                                                                              ?? Try match rule StrMatch(Bag) in CollectionKind at position 31 => nteger) = *someValue 
                                                                              -- No match 'Bag' at 31 => 'nteger) = *som*eValue '
                                                                              ?? Try match rule StrMatch(Sequence) in CollectionKind at position 31 => nteger) = *someValue 
                                                                              -- No match 'Sequence' at 31 => 'nteger) = *someValu*e '
                                                                              ?? Try match rule StrMatch(Collection) in CollectionKind at position 31 => nteger) = *someValue 
                                                                              -- No match 'Collection' at 31 => 'nteger) = *someValue *'
                                                                           <<- Not matched rule CollectionKind=OrderedChoice in CollectionKind at position 30 => Integer) =* someValue
                                                                        <<- Not matched rule __asgn_plain=Sequence[collectionKind] in __asgn_plain at position 30 => Integer) =* someValue
                                                                     <<- Not matched rule LiteralCollection=Sequence in LiteralCollection at position 30 => Integer) =* someValue
                                                                  <<- Not matched rule __asgn_plain=Sequence[literalCollection] in __asgn_plain at position 30 => Integer) =* someValue
                                                                  >> Matching rule __asgn_plain=Sequence[literal] in PrimaryExpression at position 30 => Integer) =* someValue
                                                                     >> Matching rule Literal=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                                                                        >> Matching rule __asgn_plain=Sequence[string] in Literal at position 30 => Integer) =* someValue
                                                                           ?? Try match rule STRING=RegExMatch(("(\\"|[^"])*")|(\'(\\\'|[^\'])*\')) in __asgn_plain at position 31 => nteger) = *someValue 
                                                                           -- NoMatch at 31
                                                                        <<- Not matched rule __asgn_plain=Sequence[string] in __asgn_plain at position 30 => Integer) =* someValue
                                                                        >> Matching rule __asgn_plain=Sequence[number] in Literal at position 30 => Integer) =* someValue
                                                                           >> Matching rule NUMBER=OrderedChoice in __asgn_plain at position 30 => Integer) =* someValue
                                                                              ?? Try match rule FLOAT=RegExMatch([+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?(?<=[\w\.])(?![\w\.])) in NUMBER at position 31 => nteger) = *someValue 
                                                                              -- NoMatch at 31
                                                                              ?? Try match rule INT=RegExMatch([-+]?[0-9]+\b) in NUMBER at position 31 => nteger) = *someValue 
                                                                              -- NoMatch at 31
                                                                           <<- Not matched rule NUMBER=OrderedChoice in NUMBER at position 30 => Integer) =* someValue
                                                                        <<- Not matched rule __asgn_plain=Sequence[number] in __asgn_plain at position 30 => Integer) =* someValue
                                                                        >> Matching rule __asgn_plain=Sequence[enumLiteral] in Literal at position 30 => Integer) =* someValue
                                                                           >> Matching rule EnumLiteral=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                                              >> Matching rule __asgn_plain=Sequence[names] in EnumLiteral at position 30 => Integer) =* someValue
                                                                                 ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 31 => nteger) = *someValue 
                                                                                 ++ Match 'someValue' at 31 => 'nteger) = *someValue* '
                                                                              <<+ Matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 40 =>  someValue* in someth
                                                                              ?? Try match rule StrMatch(::) in EnumLiteral at position 41 => someValue *in somethi
                                                                              -- No match '::' at 41 => 'someValue *in* somethi'
                                                                           <<- Not matched rule EnumLiteral=Sequence in EnumLiteral at position 30 => Integer) =* someValue
                                                                        <<- Not matched rule __asgn_plain=Sequence[enumLiteral] in __asgn_plain at position 30 => Integer) =* someValue
                                                                     <<- Not matched rule Literal=OrderedChoice in Literal at position 30 => Integer) =* someValue
                                                                  <<- Not matched rule __asgn_plain=Sequence[literal] in __asgn_plain at position 30 => Integer) =* someValue
                                                                  >> Matching rule __asgn_plain=Sequence[propertyCall] in PrimaryExpression at position 30 => Integer) =* someValue
                                                                     >> Matching rule PropertyCall=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                                        >> Matching rule __asgn_plain=Sequence[pathName] in PropertyCall at position 30 => Integer) =* someValue
                                                                           >> Matching rule PathName=Sequence in __asgn_plain at position 30 => Integer) =* someValue
                                                                              >> Matching rule __asgn_plain=Sequence[names] in PathName at position 30 => Integer) =* someValue
                                                                                 ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 31 => nteger) = *someValue 
                                                                                 ++ Match 'someValue' at 31 => 'nteger) = *someValue* '
                                                                              <<+ Matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 40 =>  someValue* in someth
                                                                              >> Matching rule ZeroOrMore in PathName at position 40 =>  someValue* in someth
                                                                                 >> Matching rule Sequence in PathName at position 40 =>  someValue* in someth
                                                                                    ?? Try match rule StrMatch(::) in PathName at position 41 => someValue *in somethi
                                                                                    -- No match '::' at 41 => 'someValue *in* somethi'
                                                                                 <<- Not matched rule Sequence in PathName at position 40 =>  someValue* in someth
                                                                              <<- Not matched rule ZeroOrMore in PathName at position 40 =>  someValue* in someth
                                                                           <<+ Matched rule PathName=Sequence in PathName at position 40 =>  someValue* in someth
                                                                        <<+ Matched rule __asgn_plain=Sequence[pathName] in __asgn_plain at position 40 =>  someValue* in someth
                                                                        >> Matching rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                           >> Matching rule __asgn_plain=Sequence[timeExpression] in PropertyCall at position 40 =>  someValue* in someth
                                                                              >> Matching rule TimeExpression=Sequence in __asgn_plain at position 40 =>  someValue* in someth
                                                                                 ?? Try match rule StrMatch(@) in TimeExpression at position 41 => someValue *in somethi
                                                                                 -- No match '@' at 41 => 'someValue *i*n somethi'
                                                                              <<- Not matched rule TimeExpression=Sequence in TimeExpression at position 40 =>  someValue* in someth
                                                                           <<- Not matched rule __asgn_plain=Sequence[timeExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                                                        <<- Not matched rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                        >> Matching rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                           >> Matching rule __asgn_plain=Sequence[qualifiers] in PropertyCall at position 40 =>  someValue* in someth
                                                                              >> Matching rule Qualifiers=Sequence in __asgn_plain at position 40 =>  someValue* in someth
                                                                                 ?? Try match rule StrMatch([) in Qualifiers at position 41 => someValue *in somethi
                                                                                 -- No match '[' at 41 => 'someValue *i*n somethi'
                                                                              <<- Not matched rule Qualifiers=Sequence in Qualifiers at position 40 =>  someValue* in someth
                                                                           <<- Not matched rule __asgn_plain=Sequence[qualifiers] in __asgn_plain at position 40 =>  someValue* in someth
                                                                        <<- Not matched rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                        >> Matching rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                           >> Matching rule __asgn_plain=Sequence[propertyCallParameters] in PropertyCall at position 40 =>  someValue* in someth
                                                                              >> Matching rule PropertyCallParameters=Sequence in __asgn_plain at position 40 =>  someValue* in someth
                                                                                 ?? Try match rule StrMatch(() in PropertyCallParameters at position 41 => someValue *in somethi
                                                                                 -- No match '(' at 41 => 'someValue *i*n somethi'
                                                                              <<- Not matched rule PropertyCallParameters=Sequence in PropertyCallParameters at position 40 =>  someValue* in someth
                                                                           <<- Not matched rule __asgn_plain=Sequence[propertyCallParameters] in __asgn_plain at position 40 =>  someValue* in someth
                                                                        <<- Not matched rule Optional in PropertyCall at position 40 =>  someValue* in someth
                                                                     <<+ Matched rule PropertyCall=Sequence in PropertyCall at position 40 =>  someValue* in someth
                                                                  <<+ Matched rule __asgn_plain=Sequence[propertyCall] in __asgn_plain at position 40 =>  someValue* in someth
                                                               <<+ Matched rule PrimaryExpression=OrderedChoice in PrimaryExpression at position 40 =>  someValue* in someth
                                                            <<+ Matched rule __asgn_plain=Sequence[primaryExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                                            >> Matching rule ZeroOrMore in PostfixExpression at position 40 =>  someValue* in someth
                                                               >> Matching rule Sequence in PostfixExpression at position 40 =>  someValue* in someth
                                                                  >> Matching rule __asgn_plain=Sequence[propertyCallOperator] in PostfixExpression at position 40 =>  someValue* in someth
                                                                     >> Matching rule PropertyCallOperator=OrderedChoice in __asgn_plain at position 40 =>  someValue* in someth
                                                                        ?? Try match rule StrMatch(.) in PropertyCallOperator at position 41 => someValue *in somethi
                                                                        -- No match '.' at 41 => 'someValue *i*n somethi'
                                                                        ?? Try match rule StrMatch(->) in PropertyCallOperator at position 41 => someValue *in somethi
                                                                        -- No match '->' at 41 => 'someValue *in* somethi'
                                                                     <<- Not matched rule PropertyCallOperator=OrderedChoice in PropertyCallOperator at position 40 =>  someValue* in someth
                                                                  <<- Not matched rule __asgn_plain=Sequence[propertyCallOperator] in __asgn_plain at position 40 =>  someValue* in someth
                                                               <<- Not matched rule Sequence in PostfixExpression at position 40 =>  someValue* in someth
                                                            <<- Not matched rule ZeroOrMore in PostfixExpression at position 40 =>  someValue* in someth
                                                         <<+ Matched rule PostfixExpression=Sequence in PostfixExpression at position 40 =>  someValue* in someth
                                                      <<+ Matched rule __asgn_plain=Sequence[postfixExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                                   <<+ Matched rule UnaryExpression=Sequence in UnaryExpression at position 40 =>  someValue* in someth
                                                <<+ Matched rule __asgn_plain=Sequence[leftUnaryExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                                >> Matching rule ZeroOrMore in MultiplicativeExpression at position 40 =>  someValue* in someth
                                                   >> Matching rule Sequence in MultiplicativeExpression at position 40 =>  someValue* in someth
                                                      >> Matching rule __asgn_plain=Sequence[multiplyOperator] in MultiplicativeExpression at position 40 =>  someValue* in someth
                                                         >> Matching rule MultiplyOperator=OrderedChoice in __asgn_plain at position 40 =>  someValue* in someth
                                                            ?? Try match rule StrMatch(*) in MultiplyOperator at position 41 => someValue *in somethi
                                                            -- No match '*' at 41 => 'someValue *i*n somethi'
                                                            ?? Try match rule StrMatch(/) in MultiplyOperator at position 41 => someValue *in somethi
                                                            -- No match '/' at 41 => 'someValue *i*n somethi'
                                                         <<- Not matched rule MultiplyOperator=OrderedChoice in MultiplyOperator at position 40 =>  someValue* in someth
                                                      <<- Not matched rule __asgn_plain=Sequence[multiplyOperator] in __asgn_plain at position 40 =>  someValue* in someth
                                                   <<- Not matched rule Sequence in MultiplicativeExpression at position 40 =>  someValue* in someth
                                                <<- Not matched rule ZeroOrMore in MultiplicativeExpression at position 40 =>  someValue* in someth
                                             <<+ Matched rule MultiplicativeExpression=Sequence in MultiplicativeExpression at position 40 =>  someValue* in someth
                                          <<+ Matched rule __asgn_plain=Sequence[leftMultiplicativeExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                          >> Matching rule ZeroOrMore in AdditiveExpression at position 40 =>  someValue* in someth
                                             >> Matching rule Sequence in AdditiveExpression at position 40 =>  someValue* in someth
                                                >> Matching rule __asgn_plain=Sequence[additiveOperator] in AdditiveExpression at position 40 =>  someValue* in someth
                                                   >> Matching rule additiveOperator=OrderedChoice in __asgn_plain at position 40 =>  someValue* in someth
                                                      ?? Try match rule StrMatch(+) in additiveOperator at position 41 => someValue *in somethi
                                                      -- No match '+' at 41 => 'someValue *i*n somethi'
                                                      ?? Try match rule StrMatch(-) in additiveOperator at position 41 => someValue *in somethi
                                                      -- No match '-' at 41 => 'someValue *i*n somethi'
                                                   <<- Not matched rule additiveOperator=OrderedChoice in additiveOperator at position 40 =>  someValue* in someth
                                                <<- Not matched rule __asgn_plain=Sequence[additiveOperator] in __asgn_plain at position 40 =>  someValue* in someth
                                             <<- Not matched rule Sequence in AdditiveExpression at position 40 =>  someValue* in someth
                                          <<- Not matched rule ZeroOrMore in AdditiveExpression at position 40 =>  someValue* in someth
                                       <<+ Matched rule AdditiveExpression=Sequence in AdditiveExpression at position 40 =>  someValue* in someth
                                    <<+ Matched rule __asgn_plain=Sequence[leftAdditiveExpression] in __asgn_plain at position 40 =>  someValue* in someth
                                    >> Matching rule Optional in RelationalExpression at position 40 =>  someValue* in someth
                                       >> Matching rule Sequence in RelationalExpression at position 40 =>  someValue* in someth
                                          >> Matching rule __asgn_plain=Sequence[relationalOperator] in RelationalExpression at position 40 =>  someValue* in someth
                                             >> Matching rule RelationalOperator=OrderedChoice in __asgn_plain at position 40 =>  someValue* in someth
                                                ?? Try match rule StrMatch(=) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '=' at 41 => 'someValue *i*n somethi'
                                                ?? Try match rule StrMatch(>=) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '>=' at 41 => 'someValue *in* somethi'
                                                ?? Try match rule StrMatch(>) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '>' at 41 => 'someValue *i*n somethi'
                                                ?? Try match rule StrMatch(<=) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '<=' at 41 => 'someValue *in* somethi'
                                                ?? Try match rule StrMatch(<>) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '<>' at 41 => 'someValue *in* somethi'
                                                ?? Try match rule StrMatch(<) in RelationalOperator at position 41 => someValue *in somethi
                                                -- No match '<' at 41 => 'someValue *i*n somethi'
                                             <<- Not matched rule RelationalOperator=OrderedChoice in RelationalOperator at position 40 =>  someValue* in someth
                                          <<- Not matched rule __asgn_plain=Sequence[relationalOperator] in __asgn_plain at position 40 =>  someValue* in someth
                                       <<- Not matched rule Sequence in RelationalExpression at position 40 =>  someValue* in someth
                                    <<- Not matched rule Optional in RelationalExpression at position 40 =>  someValue* in someth
                                 <<+ Matched rule RelationalExpression=Sequence in RelationalExpression at position 40 =>  someValue* in someth
                              <<+ Matched rule __asgn_plain=Sequence[leftRelationalExpression] in __asgn_plain at position 40 =>  someValue* in someth
                              >> Matching rule ZeroOrMore in LogicalExpression at position 40 =>  someValue* in someth
                                 >> Matching rule Sequence in LogicalExpression at position 40 =>  someValue* in someth
                                    >> Matching rule __asgn_plain=Sequence[logicalOperator] in LogicalExpression at position 40 =>  someValue* in someth
                                       >> Matching rule LogicalOperator=OrderedChoice in __asgn_plain at position 40 =>  someValue* in someth
                                          ?? Try match rule StrMatch(and) in LogicalOperator at position 41 => someValue *in somethi
                                          -- No match 'and' at 41 => 'someValue *in *somethi'
                                          ?? Try match rule StrMatch(or) in LogicalOperator at position 41 => someValue *in somethi
                                          -- No match 'or' at 41 => 'someValue *in* somethi'
                                          ?? Try match rule StrMatch(xor) in LogicalOperator at position 41 => someValue *in somethi
                                          -- No match 'xor' at 41 => 'someValue *in *somethi'
                                          ?? Try match rule StrMatch(implies) in LogicalOperator at position 41 => someValue *in somethi
                                          -- No match 'implies' at 41 => 'someValue *in some*thi'
                                       <<- Not matched rule LogicalOperator=OrderedChoice in LogicalOperator at position 40 =>  someValue* in someth
                                    <<- Not matched rule __asgn_plain=Sequence[logicalOperator] in __asgn_plain at position 40 =>  someValue* in someth
                                 <<- Not matched rule Sequence in LogicalExpression at position 40 =>  someValue* in someth
                              <<- Not matched rule ZeroOrMore in LogicalExpression at position 40 =>  someValue* in someth
                           <<+ Matched rule LogicalExpression=Sequence in LogicalExpression at position 40 =>  someValue* in someth
                        <<+ Matched rule __asgn_plain=Sequence[logicalExpression] in __asgn_plain at position 40 =>  someValue* in someth
                     <<+ Matched rule Expression=OrderedChoice in Expression at position 40 =>  someValue* in someth
                  <<+ Matched rule __asgn_plain=Sequence[initExpression] in __asgn_plain at position 40 =>  someValue* in someth
                  ?? Try match rule StrMatch(in) in LetExpression at position 41 => someValue *in somethi
                  ++ Match 'in' at 41 => 'someValue *in* somethi'
                  >> Matching rule __asgn_plain=Sequence[subExpression] in LetExpression at position 43 => meValue in* something
                     >> Matching rule Expression=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                        >> Matching rule __asgn_plain=Sequence[ifExpression] in Expression at position 43 => meValue in* something
                           >> Matching rule IfExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                              ?? Try match rule StrMatch(if) in IfExpression at position 44 => eValue in *somethingE
                              -- No match 'if' at 44 => 'eValue in *so*methingE'
                           <<- Not matched rule IfExpression=Sequence in IfExpression at position 43 => meValue in* something
                        <<- Not matched rule __asgn_plain=Sequence[ifExpression] in __asgn_plain at position 43 => meValue in* something
                        >> Matching rule __asgn_plain=Sequence[letExpression] in Expression at position 43 => meValue in* something
                           >> Matching rule LetExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                              ?? Try match rule StrMatch(let) in LetExpression at position 44 => eValue in *somethingE
                              -- No match 'let' at 44 => 'eValue in *som*ethingE'
                           <<- Not matched rule LetExpression=Sequence in LetExpression at position 43 => meValue in* something
                        <<- Not matched rule __asgn_plain=Sequence[letExpression] in __asgn_plain at position 43 => meValue in* something
                        >> Matching rule __asgn_plain=Sequence[logicalExpression] in Expression at position 43 => meValue in* something
                           >> Matching rule LogicalExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                              >> Matching rule __asgn_plain=Sequence[leftRelationalExpression] in LogicalExpression at position 43 => meValue in* something
                                 >> Matching rule RelationalExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                                    >> Matching rule __asgn_plain=Sequence[leftAdditiveExpression] in RelationalExpression at position 43 => meValue in* something
                                       >> Matching rule AdditiveExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                                          >> Matching rule __asgn_plain=Sequence[leftMultiplicativeExpression] in AdditiveExpression at position 43 => meValue in* something
                                             >> Matching rule MultiplicativeExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                                                >> Matching rule __asgn_plain=Sequence[leftUnaryExpression] in MultiplicativeExpression at position 43 => meValue in* something
                                                   >> Matching rule UnaryExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                                                      >> Matching rule Optional in UnaryExpression at position 43 => meValue in* something
                                                         >> Matching rule __asgn_plain=Sequence[unaryOperator] in UnaryExpression at position 43 => meValue in* something
                                                            >> Matching rule UnaryOperator=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                                                               ?? Try match rule StrMatch(-) in UnaryOperator at position 44 => eValue in *somethingE
                                                               -- No match '-' at 44 => 'eValue in *s*omethingE'
                                                               ?? Try match rule StrMatch(not) in UnaryOperator at position 44 => eValue in *somethingE
                                                               -- No match 'not' at 44 => 'eValue in *som*ethingE'
                                                            <<- Not matched rule UnaryOperator=OrderedChoice in UnaryOperator at position 43 => meValue in* something
                                                         <<- Not matched rule __asgn_plain=Sequence[unaryOperator] in __asgn_plain at position 43 => meValue in* something
                                                      <<- Not matched rule Optional in UnaryExpression at position 43 => meValue in* something
                                                      >> Matching rule __asgn_plain=Sequence[postfixExpression] in UnaryExpression at position 43 => meValue in* something
                                                         >> Matching rule PostfixExpression=Sequence in __asgn_plain at position 43 => meValue in* something
                                                            >> Matching rule __asgn_plain=Sequence[primaryExpression] in PostfixExpression at position 43 => meValue in* something
                                                               >> Matching rule PrimaryExpression=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                                                                  >> Matching rule Sequence in PrimaryExpression at position 43 => meValue in* something
                                                                     ?? Try match rule StrMatch(() in PrimaryExpression at position 44 => eValue in *somethingE
                                                                     -- No match '(' at 44 => 'eValue in *s*omethingE'
                                                                  <<- Not matched rule Sequence in PrimaryExpression at position 43 => meValue in* something
                                                                  >> Matching rule __asgn_plain=Sequence[literalCollection] in PrimaryExpression at position 43 => meValue in* something
                                                                     >> Matching rule LiteralCollection=Sequence in __asgn_plain at position 43 => meValue in* something
                                                                        >> Matching rule __asgn_plain=Sequence[collectionKind] in LiteralCollection at position 43 => meValue in* something
                                                                           >> Matching rule CollectionKind=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                                                                              ?? Try match rule StrMatch(Set) in CollectionKind at position 44 => eValue in *somethingE
                                                                              -- No match 'Set' at 44 => 'eValue in *som*ethingE'
                                                                              ?? Try match rule StrMatch(Bag) in CollectionKind at position 44 => eValue in *somethingE
                                                                              -- No match 'Bag' at 44 => 'eValue in *som*ethingE'
                                                                              ?? Try match rule StrMatch(Sequence) in CollectionKind at position 44 => eValue in *somethingE
                                                                              -- No match 'Sequence' at 44 => 'eValue in *somethin*gE'
                                                                              ?? Try match rule StrMatch(Collection) in CollectionKind at position 44 => eValue in *somethingE
                                                                              -- No match 'Collection' at 44 => 'eValue in *somethingE*'
                                                                           <<- Not matched rule CollectionKind=OrderedChoice in CollectionKind at position 43 => meValue in* something
                                                                        <<- Not matched rule __asgn_plain=Sequence[collectionKind] in __asgn_plain at position 43 => meValue in* something
                                                                     <<- Not matched rule LiteralCollection=Sequence in LiteralCollection at position 43 => meValue in* something
                                                                  <<- Not matched rule __asgn_plain=Sequence[literalCollection] in __asgn_plain at position 43 => meValue in* something
                                                                  >> Matching rule __asgn_plain=Sequence[literal] in PrimaryExpression at position 43 => meValue in* something
                                                                     >> Matching rule Literal=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                                                                        >> Matching rule __asgn_plain=Sequence[string] in Literal at position 43 => meValue in* something
                                                                           ?? Try match rule STRING=RegExMatch(("(\\"|[^"])*")|(\'(\\\'|[^\'])*\')) in __asgn_plain at position 44 => eValue in *somethingE
                                                                           -- NoMatch at 44
                                                                        <<- Not matched rule __asgn_plain=Sequence[string] in __asgn_plain at position 43 => meValue in* something
                                                                        >> Matching rule __asgn_plain=Sequence[number] in Literal at position 43 => meValue in* something
                                                                           >> Matching rule NUMBER=OrderedChoice in __asgn_plain at position 43 => meValue in* something
                                                                              ?? Try match rule FLOAT=RegExMatch([+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?(?<=[\w\.])(?![\w\.])) in NUMBER at position 44 => eValue in *somethingE
                                                                              -- NoMatch at 44
                                                                              ?? Try match rule INT=RegExMatch([-+]?[0-9]+\b) in NUMBER at position 44 => eValue in *somethingE
                                                                              -- NoMatch at 44
                                                                           <<- Not matched rule NUMBER=OrderedChoice in NUMBER at position 43 => meValue in* something
                                                                        <<- Not matched rule __asgn_plain=Sequence[number] in __asgn_plain at position 43 => meValue in* something
                                                                        >> Matching rule __asgn_plain=Sequence[enumLiteral] in Literal at position 43 => meValue in* something
                                                                           >> Matching rule EnumLiteral=Sequence in __asgn_plain at position 43 => meValue in* something
                                                                              >> Matching rule __asgn_plain=Sequence[names] in EnumLiteral at position 43 => meValue in* something
                                                                                 ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 44 => eValue in *somethingE
                                                                                 ++ Match 'somethingElse' at 44 => 'eValue in *somethingElse*'
                                                                              <<+ Matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 57 => ethingElse* 
                                                                              ?? Try match rule StrMatch(::) in EnumLiteral at position 58 => thingElse *
                                                                              -- No match '::' at 58 => 'thingElse **'
                                                                           <<- Not matched rule EnumLiteral=Sequence in EnumLiteral at position 43 => meValue in* something
                                                                        <<- Not matched rule __asgn_plain=Sequence[enumLiteral] in __asgn_plain at position 43 => meValue in* something
                                                                     <<- Not matched rule Literal=OrderedChoice in Literal at position 43 => meValue in* something
                                                                  <<- Not matched rule __asgn_plain=Sequence[literal] in __asgn_plain at position 43 => meValue in* something
                                                                  >> Matching rule __asgn_plain=Sequence[propertyCall] in PrimaryExpression at position 43 => meValue in* something
                                                                     >> Matching rule PropertyCall=Sequence in __asgn_plain at position 43 => meValue in* something
                                                                        >> Matching rule __asgn_plain=Sequence[pathName] in PropertyCall at position 43 => meValue in* something
                                                                           >> Matching rule PathName=Sequence in __asgn_plain at position 43 => meValue in* something
                                                                              >> Matching rule __asgn_plain=Sequence[names] in PathName at position 43 => meValue in* something
                                                                                 ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 44 => eValue in *somethingE
                                                                                 ++ Match 'somethingElse' at 44 => 'eValue in *somethingElse*'
                                                                              <<+ Matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 57 => ethingElse* 
                                                                              >> Matching rule ZeroOrMore in PathName at position 57 => ethingElse* 
                                                                                 >> Matching rule Sequence in PathName at position 57 => ethingElse* 
                                                                                    ?? Try match rule StrMatch(::) in PathName at position 58 => thingElse *
                                                                                    -- No match '::' at 58 => 'thingElse **'
                                                                                 <<- Not matched rule Sequence in PathName at position 57 => ethingElse* 
                                                                              <<- Not matched rule ZeroOrMore in PathName at position 57 => ethingElse* 
                                                                           <<+ Matched rule PathName=Sequence in PathName at position 57 => ethingElse* 
                                                                        <<+ Matched rule __asgn_plain=Sequence[pathName] in __asgn_plain at position 57 => ethingElse* 
                                                                        >> Matching rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                           >> Matching rule __asgn_plain=Sequence[timeExpression] in PropertyCall at position 57 => ethingElse* 
                                                                              >> Matching rule TimeExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                                                 ?? Try match rule StrMatch(@) in TimeExpression at position 58 => thingElse *
                                                                                 -- No match '@' at 58 => 'thingElse **'
                                                                              <<- Not matched rule TimeExpression=Sequence in TimeExpression at position 57 => ethingElse* 
                                                                           <<- Not matched rule __asgn_plain=Sequence[timeExpression] in __asgn_plain at position 57 => ethingElse* 
                                                                        <<- Not matched rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                        >> Matching rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                           >> Matching rule __asgn_plain=Sequence[qualifiers] in PropertyCall at position 57 => ethingElse* 
                                                                              >> Matching rule Qualifiers=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                                                 ?? Try match rule StrMatch([) in Qualifiers at position 58 => thingElse *
                                                                                 -- No match '[' at 58 => 'thingElse **'
                                                                              <<- Not matched rule Qualifiers=Sequence in Qualifiers at position 57 => ethingElse* 
                                                                           <<- Not matched rule __asgn_plain=Sequence[qualifiers] in __asgn_plain at position 57 => ethingElse* 
                                                                        <<- Not matched rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                        >> Matching rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                           >> Matching rule __asgn_plain=Sequence[propertyCallParameters] in PropertyCall at position 57 => ethingElse* 
                                                                              >> Matching rule PropertyCallParameters=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                                                 ?? Try match rule StrMatch(() in PropertyCallParameters at position 58 => thingElse *
                                                                                 -- No match '(' at 58 => 'thingElse **'
                                                                              <<- Not matched rule PropertyCallParameters=Sequence in PropertyCallParameters at position 57 => ethingElse* 
                                                                           <<- Not matched rule __asgn_plain=Sequence[propertyCallParameters] in __asgn_plain at position 57 => ethingElse* 
                                                                        <<- Not matched rule Optional in PropertyCall at position 57 => ethingElse* 
                                                                     <<+ Matched rule PropertyCall=Sequence in PropertyCall at position 57 => ethingElse* 
                                                                  <<+ Matched rule __asgn_plain=Sequence[propertyCall] in __asgn_plain at position 57 => ethingElse* 
                                                               <<+ Matched rule PrimaryExpression=OrderedChoice in PrimaryExpression at position 57 => ethingElse* 
                                                            <<+ Matched rule __asgn_plain=Sequence[primaryExpression] in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule ZeroOrMore in PostfixExpression at position 57 => ethingElse* 
                                                               >> Matching rule Sequence in PostfixExpression at position 57 => ethingElse* 
                                                                  >> Matching rule __asgn_plain=Sequence[propertyCallOperator] in PostfixExpression at position 57 => ethingElse* 
                                                                     >> Matching rule PropertyCallOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                                        ?? Try match rule StrMatch(.) in PropertyCallOperator at position 58 => thingElse *
                                                                        -- No match '.' at 58 => 'thingElse **'
                                                                        ?? Try match rule StrMatch(->) in PropertyCallOperator at position 58 => thingElse *
                                                                        -- No match '->' at 58 => 'thingElse **'
                                                                     <<- Not matched rule PropertyCallOperator=OrderedChoice in PropertyCallOperator at position 57 => ethingElse* 
                                                                  <<- Not matched rule __asgn_plain=Sequence[propertyCallOperator] in __asgn_plain at position 57 => ethingElse* 
                                                               <<- Not matched rule Sequence in PostfixExpression at position 57 => ethingElse* 
                                                            <<- Not matched rule ZeroOrMore in PostfixExpression at position 57 => ethingElse* 
                                                         <<+ Matched rule PostfixExpression=Sequence in PostfixExpression at position 57 => ethingElse* 
                                                      <<+ Matched rule __asgn_plain=Sequence[postfixExpression] in __asgn_plain at position 57 => ethingElse* 
                                                   <<+ Matched rule UnaryExpression=Sequence in UnaryExpression at position 57 => ethingElse* 
                                                <<+ Matched rule __asgn_plain=Sequence[leftUnaryExpression] in __asgn_plain at position 57 => ethingElse* 
                                                >> Matching rule ZeroOrMore in MultiplicativeExpression at position 57 => ethingElse* 
                                                   >> Matching rule Sequence in MultiplicativeExpression at position 57 => ethingElse* 
                                                      >> Matching rule __asgn_plain=Sequence[multiplyOperator] in MultiplicativeExpression at position 57 => ethingElse* 
                                                         >> Matching rule MultiplyOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                            ?? Try match rule StrMatch(*) in MultiplyOperator at position 58 => thingElse *
                                                            -- No match '*' at 58 => 'thingElse **'
                                                            ?? Try match rule StrMatch(/) in MultiplyOperator at position 58 => thingElse *
                                                            -- No match '/' at 58 => 'thingElse **'
                                                         <<- Not matched rule MultiplyOperator=OrderedChoice in MultiplyOperator at position 57 => ethingElse* 
                                                      <<- Not matched rule __asgn_plain=Sequence[multiplyOperator] in __asgn_plain at position 57 => ethingElse* 
                                                   <<- Not matched rule Sequence in MultiplicativeExpression at position 57 => ethingElse* 
                                                <<- Not matched rule ZeroOrMore in MultiplicativeExpression at position 57 => ethingElse* 
                                             <<+ Matched rule MultiplicativeExpression=Sequence in MultiplicativeExpression at position 57 => ethingElse* 
                                          <<+ Matched rule __asgn_plain=Sequence[leftMultiplicativeExpression] in __asgn_plain at position 57 => ethingElse* 
                                          >> Matching rule ZeroOrMore in AdditiveExpression at position 57 => ethingElse* 
                                             >> Matching rule Sequence in AdditiveExpression at position 57 => ethingElse* 
                                                >> Matching rule __asgn_plain=Sequence[additiveOperator] in AdditiveExpression at position 57 => ethingElse* 
                                                   >> Matching rule additiveOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                      ?? Try match rule StrMatch(+) in additiveOperator at position 58 => thingElse *
                                                      -- No match '+' at 58 => 'thingElse **'
                                                      ?? Try match rule StrMatch(-) in additiveOperator at position 58 => thingElse *
                                                      -- No match '-' at 58 => 'thingElse **'
                                                   <<- Not matched rule additiveOperator=OrderedChoice in additiveOperator at position 57 => ethingElse* 
                                                <<- Not matched rule __asgn_plain=Sequence[additiveOperator] in __asgn_plain at position 57 => ethingElse* 
                                             <<- Not matched rule Sequence in AdditiveExpression at position 57 => ethingElse* 
                                          <<- Not matched rule ZeroOrMore in AdditiveExpression at position 57 => ethingElse* 
                                       <<+ Matched rule AdditiveExpression=Sequence in AdditiveExpression at position 57 => ethingElse* 
                                    <<+ Matched rule __asgn_plain=Sequence[leftAdditiveExpression] in __asgn_plain at position 57 => ethingElse* 
                                    >> Matching rule Optional in RelationalExpression at position 57 => ethingElse* 
                                       >> Matching rule Sequence in RelationalExpression at position 57 => ethingElse* 
                                          >> Matching rule __asgn_plain=Sequence[relationalOperator] in RelationalExpression at position 57 => ethingElse* 
                                             >> Matching rule RelationalOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                ?? Try match rule StrMatch(=) in RelationalOperator at position 58 => thingElse *
                                                -- No match '=' at 58 => 'thingElse **'
                                                ?? Try match rule StrMatch(>=) in RelationalOperator at position 58 => thingElse *
                                                -- No match '>=' at 58 => 'thingElse **'
                                                ?? Try match rule StrMatch(>) in RelationalOperator at position 58 => thingElse *
                                                -- No match '>' at 58 => 'thingElse **'
                                                ?? Try match rule StrMatch(<=) in RelationalOperator at position 58 => thingElse *
                                                -- No match '<=' at 58 => 'thingElse **'
                                                ?? Try match rule StrMatch(<>) in RelationalOperator at position 58 => thingElse *
                                                -- No match '<>' at 58 => 'thingElse **'
                                                ?? Try match rule StrMatch(<) in RelationalOperator at position 58 => thingElse *
                                                -- No match '<' at 58 => 'thingElse **'
                                             <<- Not matched rule RelationalOperator=OrderedChoice in RelationalOperator at position 57 => ethingElse* 
                                          <<- Not matched rule __asgn_plain=Sequence[relationalOperator] in __asgn_plain at position 57 => ethingElse* 
                                       <<- Not matched rule Sequence in RelationalExpression at position 57 => ethingElse* 
                                    <<- Not matched rule Optional in RelationalExpression at position 57 => ethingElse* 
                                 <<+ Matched rule RelationalExpression=Sequence in RelationalExpression at position 57 => ethingElse* 
                              <<+ Matched rule __asgn_plain=Sequence[leftRelationalExpression] in __asgn_plain at position 57 => ethingElse* 
                              >> Matching rule ZeroOrMore in LogicalExpression at position 57 => ethingElse* 
                                 >> Matching rule Sequence in LogicalExpression at position 57 => ethingElse* 
                                    >> Matching rule __asgn_plain=Sequence[logicalOperator] in LogicalExpression at position 57 => ethingElse* 
                                       >> Matching rule LogicalOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                          ?? Try match rule StrMatch(and) in LogicalOperator at position 58 => thingElse *
                                          -- No match 'and' at 58 => 'thingElse **'
                                          ?? Try match rule StrMatch(or) in LogicalOperator at position 58 => thingElse *
                                          -- No match 'or' at 58 => 'thingElse **'
                                          ?? Try match rule StrMatch(xor) in LogicalOperator at position 58 => thingElse *
                                          -- No match 'xor' at 58 => 'thingElse **'
                                          ?? Try match rule StrMatch(implies) in LogicalOperator at position 58 => thingElse *
                                          -- No match 'implies' at 58 => 'thingElse **'
                                       <<- Not matched rule LogicalOperator=OrderedChoice in LogicalOperator at position 57 => ethingElse* 
                                    <<- Not matched rule __asgn_plain=Sequence[logicalOperator] in __asgn_plain at position 57 => ethingElse* 
                                 <<- Not matched rule Sequence in LogicalExpression at position 57 => ethingElse* 
                              <<- Not matched rule ZeroOrMore in LogicalExpression at position 57 => ethingElse* 
                           <<+ Matched rule LogicalExpression=Sequence in LogicalExpression at position 57 => ethingElse* 
                        <<+ Matched rule __asgn_plain=Sequence[logicalExpression] in __asgn_plain at position 57 => ethingElse* 
                     <<+ Matched rule Expression=OrderedChoice in Expression at position 57 => ethingElse* 
                  <<+ Matched rule __asgn_plain=Sequence[subExpression] in __asgn_plain at position 57 => ethingElse* 
               <<+ Matched rule LetExpression=Sequence in LetExpression at position 57 => ethingElse* 
            <<+ Matched rule __asgn_plain=Sequence[letExpression] in __asgn_plain at position 57 => ethingElse* 
         <<+ Matched rule Expression=OrderedChoice in Expression at position 57 => ethingElse* 
      <<+ Matched rule __asgn_plain=Sequence[expressions] in __asgn_plain at position 57 => ethingElse* 
      >> Matching rule __asgn_plain=Sequence[expressions] in File at position 57 => ethingElse* 
         >> Matching rule Expression=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
            >> Matching rule __asgn_plain=Sequence[ifExpression] in Expression at position 57 => ethingElse* 
               >> Matching rule IfExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                  ?? Try match rule StrMatch(if) in IfExpression at position 58 => thingElse *
                  -- No match 'if' at 58 => 'thingElse **'
               <<- Not matched rule IfExpression=Sequence in IfExpression at position 57 => ethingElse* 
            <<- Not matched rule __asgn_plain=Sequence[ifExpression] in __asgn_plain at position 57 => ethingElse* 
            >> Matching rule __asgn_plain=Sequence[letExpression] in Expression at position 57 => ethingElse* 
               >> Matching rule LetExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                  ?? Try match rule StrMatch(let) in LetExpression at position 58 => thingElse *
                  -- No match 'let' at 58 => 'thingElse **'
               <<- Not matched rule LetExpression=Sequence in LetExpression at position 57 => ethingElse* 
            <<- Not matched rule __asgn_plain=Sequence[letExpression] in __asgn_plain at position 57 => ethingElse* 
            >> Matching rule __asgn_plain=Sequence[logicalExpression] in Expression at position 57 => ethingElse* 
               >> Matching rule LogicalExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                  >> Matching rule __asgn_plain=Sequence[leftRelationalExpression] in LogicalExpression at position 57 => ethingElse* 
                     >> Matching rule RelationalExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                        >> Matching rule __asgn_plain=Sequence[leftAdditiveExpression] in RelationalExpression at position 57 => ethingElse* 
                           >> Matching rule AdditiveExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                              >> Matching rule __asgn_plain=Sequence[leftMultiplicativeExpression] in AdditiveExpression at position 57 => ethingElse* 
                                 >> Matching rule MultiplicativeExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                                    >> Matching rule __asgn_plain=Sequence[leftUnaryExpression] in MultiplicativeExpression at position 57 => ethingElse* 
                                       >> Matching rule UnaryExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                                          >> Matching rule Optional in UnaryExpression at position 57 => ethingElse* 
                                             >> Matching rule __asgn_plain=Sequence[unaryOperator] in UnaryExpression at position 57 => ethingElse* 
                                                >> Matching rule UnaryOperator=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                   ?? Try match rule StrMatch(-) in UnaryOperator at position 58 => thingElse *
                                                   -- No match '-' at 58 => 'thingElse **'
                                                   ?? Try match rule StrMatch(not) in UnaryOperator at position 58 => thingElse *
                                                   -- No match 'not' at 58 => 'thingElse **'
                                                <<- Not matched rule UnaryOperator=OrderedChoice in UnaryOperator at position 57 => ethingElse* 
                                             <<- Not matched rule __asgn_plain=Sequence[unaryOperator] in __asgn_plain at position 57 => ethingElse* 
                                          <<- Not matched rule Optional in UnaryExpression at position 57 => ethingElse* 
                                          >> Matching rule __asgn_plain=Sequence[postfixExpression] in UnaryExpression at position 57 => ethingElse* 
                                             >> Matching rule PostfixExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                >> Matching rule __asgn_plain=Sequence[primaryExpression] in PostfixExpression at position 57 => ethingElse* 
                                                   >> Matching rule PrimaryExpression=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                      >> Matching rule Sequence in PrimaryExpression at position 57 => ethingElse* 
                                                         ?? Try match rule StrMatch(() in PrimaryExpression at position 58 => thingElse *
                                                         -- No match '(' at 58 => 'thingElse **'
                                                      <<- Not matched rule Sequence in PrimaryExpression at position 57 => ethingElse* 
                                                      >> Matching rule __asgn_plain=Sequence[literalCollection] in PrimaryExpression at position 57 => ethingElse* 
                                                         >> Matching rule LiteralCollection=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule __asgn_plain=Sequence[collectionKind] in LiteralCollection at position 57 => ethingElse* 
                                                               >> Matching rule CollectionKind=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                                  ?? Try match rule StrMatch(Set) in CollectionKind at position 58 => thingElse *
                                                                  -- No match 'Set' at 58 => 'thingElse **'
                                                                  ?? Try match rule StrMatch(Bag) in CollectionKind at position 58 => thingElse *
                                                                  -- No match 'Bag' at 58 => 'thingElse **'
                                                                  ?? Try match rule StrMatch(Sequence) in CollectionKind at position 58 => thingElse *
                                                                  -- No match 'Sequence' at 58 => 'thingElse **'
                                                                  ?? Try match rule StrMatch(Collection) in CollectionKind at position 58 => thingElse *
                                                                  -- No match 'Collection' at 58 => 'thingElse **'
                                                               <<- Not matched rule CollectionKind=OrderedChoice in CollectionKind at position 57 => ethingElse* 
                                                            <<- Not matched rule __asgn_plain=Sequence[collectionKind] in __asgn_plain at position 57 => ethingElse* 
                                                         <<- Not matched rule LiteralCollection=Sequence in LiteralCollection at position 57 => ethingElse* 
                                                      <<- Not matched rule __asgn_plain=Sequence[literalCollection] in __asgn_plain at position 57 => ethingElse* 
                                                      >> Matching rule __asgn_plain=Sequence[literal] in PrimaryExpression at position 57 => ethingElse* 
                                                         >> Matching rule Literal=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule __asgn_plain=Sequence[string] in Literal at position 57 => ethingElse* 
                                                               ?? Try match rule STRING=RegExMatch(("(\\"|[^"])*")|(\'(\\\'|[^\'])*\')) in __asgn_plain at position 58 => thingElse *
                                                               -- NoMatch at 58
                                                            <<- Not matched rule __asgn_plain=Sequence[string] in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule __asgn_plain=Sequence[number] in Literal at position 57 => ethingElse* 
                                                               >> Matching rule NUMBER=OrderedChoice in __asgn_plain at position 57 => ethingElse* 
                                                                  ?? Try match rule FLOAT=RegExMatch([+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?(?<=[\w\.])(?![\w\.])) in NUMBER at position 58 => thingElse *
                                                                  -- NoMatch at 58
                                                                  ?? Try match rule INT=RegExMatch([-+]?[0-9]+\b) in NUMBER at position 58 => thingElse *
                                                                  -- NoMatch at 58
                                                               <<- Not matched rule NUMBER=OrderedChoice in NUMBER at position 57 => ethingElse* 
                                                            <<- Not matched rule __asgn_plain=Sequence[number] in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule __asgn_plain=Sequence[enumLiteral] in Literal at position 57 => ethingElse* 
                                                               >> Matching rule EnumLiteral=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                                  >> Matching rule __asgn_plain=Sequence[names] in EnumLiteral at position 57 => ethingElse* 
                                                                     ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 58 => thingElse *
                                                                     -- NoMatch at 58
                                                                  <<- Not matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 57 => ethingElse* 
                                                               <<- Not matched rule EnumLiteral=Sequence in EnumLiteral at position 57 => ethingElse* 
                                                            <<- Not matched rule __asgn_plain=Sequence[enumLiteral] in __asgn_plain at position 57 => ethingElse* 
                                                         <<- Not matched rule Literal=OrderedChoice in Literal at position 57 => ethingElse* 
                                                      <<- Not matched rule __asgn_plain=Sequence[literal] in __asgn_plain at position 57 => ethingElse* 
                                                      >> Matching rule __asgn_plain=Sequence[propertyCall] in PrimaryExpression at position 57 => ethingElse* 
                                                         >> Matching rule PropertyCall=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                            >> Matching rule __asgn_plain=Sequence[pathName] in PropertyCall at position 57 => ethingElse* 
                                                               >> Matching rule PathName=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                                  >> Matching rule __asgn_plain=Sequence[names] in PathName at position 57 => ethingElse* 
                                                                     ?? Try match rule Name=RegExMatch([a-zA-Z_]([a-zA-Z0-9_])*) in __asgn_plain at position 58 => thingElse *
                                                                     -- NoMatch at 58
                                                                  <<- Not matched rule __asgn_plain=Sequence[names] in __asgn_plain at position 57 => ethingElse* 
                                                               <<- Not matched rule PathName=Sequence in PathName at position 57 => ethingElse* 
                                                            <<- Not matched rule __asgn_plain=Sequence[pathName] in __asgn_plain at position 57 => ethingElse* 
                                                         <<- Not matched rule PropertyCall=Sequence in PropertyCall at position 57 => ethingElse* 
                                                      <<- Not matched rule __asgn_plain=Sequence[propertyCall] in __asgn_plain at position 57 => ethingElse* 
                                                      >> Matching rule __asgn_plain=Sequence[ifExpression] in PrimaryExpression at position 57 => ethingElse* 
                                                         >> Matching rule IfExpression=Sequence in __asgn_plain at position 57 => ethingElse* 
                                                            ?? Try match rule StrMatch(if) in IfExpression at position 58 => thingElse *
                                                            -- No match 'if' at 58 => 'thingElse **'
                                                         <<- Not matched rule IfExpression=Sequence in IfExpression at position 57 => ethingElse* 
                                                      <<- Not matched rule __asgn_plain=Sequence[ifExpression] in __asgn_plain at position 57 => ethingElse* 
                                                   <<- Not matched rule PrimaryExpression=OrderedChoice in PrimaryExpression at position 57 => ethingElse* 
                                                <<- Not matched rule __asgn_plain=Sequence[primaryExpression] in __asgn_plain at position 57 => ethingElse* 
                                             <<- Not matched rule PostfixExpression=Sequence in PostfixExpression at position 57 => ethingElse* 
                                          <<- Not matched rule __asgn_plain=Sequence[postfixExpression] in __asgn_plain at position 57 => ethingElse* 
                                       <<- Not matched rule UnaryExpression=Sequence in UnaryExpression at position 57 => ethingElse* 
                                    <<- Not matched rule __asgn_plain=Sequence[leftUnaryExpression] in __asgn_plain at position 57 => ethingElse* 
                                 <<- Not matched rule MultiplicativeExpression=Sequence in MultiplicativeExpression at position 57 => ethingElse* 
                              <<- Not matched rule __asgn_plain=Sequence[leftMultiplicativeExpression] in __asgn_plain at position 57 => ethingElse* 
                           <<- Not matched rule AdditiveExpression=Sequence in AdditiveExpression at position 57 => ethingElse* 
                        <<- Not matched rule __asgn_plain=Sequence[leftAdditiveExpression] in __asgn_plain at position 57 => ethingElse* 
                     <<- Not matched rule RelationalExpression=Sequence in RelationalExpression at position 57 => ethingElse* 
                  <<- Not matched rule __asgn_plain=Sequence[leftRelationalExpression] in __asgn_plain at position 57 => ethingElse* 
               <<- Not matched rule LogicalExpression=Sequence in LogicalExpression at position 57 => ethingElse* 
            <<- Not matched rule __asgn_plain=Sequence[logicalExpression] in __asgn_plain at position 57 => ethingElse* 
         <<- Not matched rule Expression=OrderedChoice in Expression at position 57 => ethingElse* 
      <<- Not matched rule __asgn_plain=Sequence[expressions] in __asgn_plain at position 57 => ethingElse* 
   <<+ Matched rule File=ZeroOrMore in File at position 57 => ethingElse* 
   ?? Try match rule EOF in Model at position 58 => thingElse *
<<+ Matched rule Model=Sequence in Model at position 58 => thingElse *
CREATING INSTANCE File
Recursing into NonTerminal = 'let | something | : | Set | ( | Integer | ) | = | someValue | in | somethingElse'
Handling assignment: plain expressions...
CREATING INSTANCE Expression
Recursing into NonTerminal = 'let | something | : | Set | ( | Integer | ) | = | someValue | in | somethingElse'
Handling assignment: plain letExpression...
CREATING INSTANCE LetExpression
Recursing into Terminal = 'let'
Recursing into NonTerminal = 'something'
Handling assignment: plain identifier...
Recursing into Terminal = ':'
Recursing into NonTerminal = 'Set | ( | Integer | )'
Handling assignment: plain type...
CREATING INSTANCE TypeSpecifier
Recursing into NonTerminal = 'Set | ( | Integer | )'
Handling assignment: plain collectionType...
CREATING INSTANCE CollectionType
Recursing into NonTerminal = 'Set'
Handling assignment: plain collectionKind...
Recursing into Terminal = '('
Recursing into NonTerminal = 'Integer'
Handling assignment: plain simpleTypeSpecifier...
CREATING INSTANCE SimpleTypeSpecifier
Recursing into NonTerminal = 'Integer'
Handling assignment: plain pathName...
CREATING INSTANCE PathName
Recursing into NonTerminal = 'Integer'
Handling assignment: plain names...
LEAVING INSTANCE PathName
LEAVING INSTANCE SimpleTypeSpecifier
Recursing into Terminal = ')'
LEAVING INSTANCE CollectionType
LEAVING INSTANCE TypeSpecifier
Recursing into Terminal = '='
Recursing into NonTerminal = 'someValue'
Handling assignment: plain initExpression...
CREATING INSTANCE Expression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain logicalExpression...
CREATING INSTANCE LogicalExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain leftRelationalExpression...
CREATING INSTANCE RelationalExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain leftAdditiveExpression...
CREATING INSTANCE AdditiveExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain leftMultiplicativeExpression...
CREATING INSTANCE MultiplicativeExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain leftUnaryExpression...
CREATING INSTANCE UnaryExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain postfixExpression...
CREATING INSTANCE PostfixExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain primaryExpression...
CREATING INSTANCE PrimaryExpression
Recursing into NonTerminal = 'someValue'
Handling assignment: plain propertyCall...
CREATING INSTANCE PropertyCall
Recursing into NonTerminal = 'someValue'
Handling assignment: plain pathName...
CREATING INSTANCE PathName
Recursing into NonTerminal = 'someValue'
Handling assignment: plain names...
LEAVING INSTANCE PathName
LEAVING INSTANCE PropertyCall
LEAVING INSTANCE PrimaryExpression
LEAVING INSTANCE PostfixExpression
LEAVING INSTANCE UnaryExpression
LEAVING INSTANCE MultiplicativeExpression
LEAVING INSTANCE AdditiveExpression
LEAVING INSTANCE RelationalExpression
LEAVING INSTANCE LogicalExpression
LEAVING INSTANCE Expression
Recursing into Terminal = 'in'
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain subExpression...
CREATING INSTANCE Expression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain logicalExpression...
CREATING INSTANCE LogicalExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain leftRelationalExpression...
CREATING INSTANCE RelationalExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain leftAdditiveExpression...
CREATING INSTANCE AdditiveExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain leftMultiplicativeExpression...
CREATING INSTANCE MultiplicativeExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain leftUnaryExpression...
CREATING INSTANCE UnaryExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain postfixExpression...
CREATING INSTANCE PostfixExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain primaryExpression...
CREATING INSTANCE PrimaryExpression
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain propertyCall...
CREATING INSTANCE PropertyCall
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain pathName...
CREATING INSTANCE PathName
Recursing into NonTerminal = 'somethingElse'
Handling assignment: plain names...
LEAVING INSTANCE PathName
LEAVING INSTANCE PropertyCall
LEAVING INSTANCE PrimaryExpression
LEAVING INSTANCE PostfixExpression
LEAVING INSTANCE UnaryExpression
LEAVING INSTANCE MultiplicativeExpression
LEAVING INSTANCE AdditiveExpression
LEAVING INSTANCE RelationalExpression
LEAVING INSTANCE LogicalExpression
LEAVING INSTANCE Expression
LEAVING INSTANCE LetExpression
LEAVING INSTANCE Expression
LEAVING INSTANCE File
